/**
 * <copyright>
 * </copyright>
 *
 * $Id: AbstractDeclarationValidator.java,v 1.1 2008/03/06 15:35:12 jkohnlein Exp $
 */
package org.eclipse.xpand3.declaration.validation;

import org.eclipse.emf.common.util.EList;

import org.eclipse.xpand3.DeclaredParameter;
import org.eclipse.xpand3.File;

import org.eclipse.xpand3.expression.AbstractExpression;

/**
 * A sample validator interface for {@link org.eclipse.xpand3.declaration.AbstractDeclaration}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface AbstractDeclarationValidator {
	boolean validate();

	boolean validateOwner(File value);
	boolean validateParams(EList<DeclaredParameter> value);
	boolean validateIsPrivate(boolean value);
	boolean validateGuard(AbstractExpression value);
}
